{
	"info": {
		"_postman_id": "3570ac6d-bad8-4c83-8afd-51ff33defef4",
		"name": "node-gmp",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "groups",
			"item": [
				{
					"name": "raw get group",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_API_URL}}/group/ea85556d-ac26-49bb-929e-07a58476751c",
							"host": [
								"{{BASE_API_URL}}"
							],
							"path": [
								"group",
								"ea85556d-ac26-49bb-929e-07a58476751c"
							]
						}
					},
					"response": []
				},
				{
					"name": "raw post group",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"third more group\",\n    \"permissions\": [\"READ\", \"WRITE\", \"DELETE\", \"SHARE\", \"UPLOAD_FILES\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_API_URL}}/group",
							"host": [
								"{{BASE_API_URL}}"
							],
							"path": [
								"group"
							]
						}
					},
					"response": []
				},
				{
					"name": "raw delete group",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BASE_API_URL}}/group/4fc355b0-e758-49ee-9d3c-00fe2b826fa7",
							"host": [
								"{{BASE_API_URL}}"
							],
							"path": [
								"group",
								"4fc355b0-e758-49ee-9d3c-00fe2b826fa7"
							]
						}
					},
					"response": []
				},
				{
					"name": "raw get all groups",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_API_URL}}/groups",
							"host": [
								"{{BASE_API_URL}}"
							],
							"path": [
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "raw add users to group",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"users\": [\"0e56bc28-7fdc-44aa-bafa-69c5de92b2c2\", \"42a80d47-b0bd-418d-ab8c-27e8dbd87738\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_API_URL}}/group/4fc355b0-e758-49ee-9d3c-00fe2b826fa7",
							"host": [
								"{{BASE_API_URL}}"
							],
							"path": [
								"group",
								"4fc355b0-e758-49ee-9d3c-00fe2b826fa7"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "users",
			"item": [
				{
					"name": "pipulate api with users",
					"item": [
						{
							"name": "populate api with users",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const users = [",
											"    {",
											"        login: 'x-login',",
											"        password: 'x1password',",
											"        age: 99,",
											"    },",
											"    {",
											"        login: 'm-login',",
											"        password: 'm2password',",
											"        age: 23,",
											"    },",
											"    {",
											"        login: 't-login',",
											"        password: 't22password',",
											"        age: 129,",
											"    },",
											"    {",
											"        login: 'e-login',",
											"        password: 'e23password',",
											"        age: 32,",
											"    },",
											"    {",
											"        login: 'd-login',",
											"        password: 'd23password',",
											"        age: 29,",
											"    },",
											"    {",
											"        login: 'h-login',",
											"        password: 'h34password',",
											"        age: 19,",
											"    },",
											"    {",
											"        login: 'k-login',",
											"        password: 'k45password',",
											"        age: 41,",
											"    },",
											"];",
											"",
											"const postRequestWithoutBody = {",
											"  url: `${pm.collectionVariables.get('BASE_API_URL')}/user`,",
											"  method: 'POST',",
											"  header: {",
											"    'Content-Type': 'application/json',",
											"  },",
											"};",
											"",
											"users.forEach(u => {",
											"    pm.sendRequest(",
											"        {",
											"            ...postRequestWithoutBody,",
											"            body: {",
											"                mode: 'raw',",
											"                raw: JSON.stringify(u)",
											"            }",
											"        },",
											"        (err, res) => {",
											"            console.log(err ? err : res.json());",
											"        },",
											"",
											"    )",
											"})",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BASE_API_URL}}",
									"host": [
										"{{BASE_API_URL}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "get /user",
					"item": [
						{
							"name": "get user",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {",
											"  url: `${pm.collectionVariables.get('BASE_API_URL')}/user`,",
											"  method: 'POST',",
											"  header: {",
											"    'Content-Type': 'application/json',",
											"  },",
											"  body: {",
											"    mode: 'raw',",
											"    raw: JSON.stringify({",
											"        login: 'postman login',",
											"        password: 'postman23password',",
											"        age: '42'",
											"    })",
											"  }",
											"};",
											"",
											"pm.sendRequest(postRequest, (err, response) => {",
											"    if (err) {",
											"        console.log(err)",
											"    }",
											"",
											"    const data = response.json();",
											"    console.log('response', data);",
											"",
											"    pm.collectionVariables.set('createdUser', data.id)",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status is 200 on corerect user id', () => {",
											"    pm.response.to.have.status(200)",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BASE_API_URL}}/user/{{createdUser}}",
									"host": [
										"{{BASE_API_URL}}"
									],
									"path": [
										"user",
										"{{createdUser}}"
									],
									"query": [
										{
											"key": "id",
											"value": "72bbfeec-6c4a-4e94-a879-6088ed312a94",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get with short id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status is 400 on short user id', () => {",
											"    pm.response.to.have.status(400)",
											"})",
											"pm.test('Message should contain details', () => {",
											"    pm.expect(pm.response.text()).equals('Error validating request params. \"id\" length must be 36 characters long.')",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BASE_API_URL}}/user/1231",
									"host": [
										"{{BASE_API_URL}}"
									],
									"path": [
										"user",
										"1231"
									]
								}
							},
							"response": []
						},
						{
							"name": "get incorrect id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('wrong id of correct lenght should return 404', () => {",
											"    pm.response.to.have.status(404)",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BASE_API_URL}}/user/{{incorrectUserId}}",
									"host": [
										"{{BASE_API_URL}}"
									],
									"path": [
										"user",
										"{{incorrectUserId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "raw calls",
					"item": [
						{
							"name": "get user raw",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BASE_API_URL}}/user/",
									"host": [
										"{{BASE_API_URL}}"
									],
									"path": [
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "raw put user",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"password\": \"updated45password\",\n    \"login\": \"updated ololo\",\n    \"age\": \"42\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE_API_URL}}/user/9311a568-6be5-44c2-aef0-9c31f326c9b9",
									"host": [
										"{{BASE_API_URL}}"
									],
									"path": [
										"user",
										"9311a568-6be5-44c2-aef0-9c31f326c9b9"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete user raw",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{BASE_API_URL}}/user/42a80d47-b0bd-418d-ab8c-27e8dbd87738",
									"host": [
										"{{BASE_API_URL}}"
									],
									"path": [
										"user",
										"42a80d47-b0bd-418d-ab8c-27e8dbd87738"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "post user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"login\": \"alpha232\",\n    \"password\": \"test123\",\n    \"age\": 32\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_API_URL}}/user",
							"host": [
								"{{BASE_API_URL}}"
							],
							"path": [
								"user"
							],
							"query": [
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "edit user",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\": \"updated45password\",\n    \"login\": \"ololo\",\n    \"age\": \"42\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_API_URL}}/user/{{createdUser}}",
							"host": [
								"{{BASE_API_URL}}"
							],
							"path": [
								"user",
								"{{createdUser}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users auto",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_API_URL}}/users?q=k&limit=100",
							"host": [
								"{{BASE_API_URL}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "q",
									"value": "k"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete user",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BASE_API_URL}}/user/{{createdUser}}",
							"host": [
								"{{BASE_API_URL}}"
							],
							"path": [
								"user",
								"{{createdUser}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_API_URL}}/all-users",
							"host": [
								"{{BASE_API_URL}}"
							],
							"path": [
								"all-users"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.collectionVariables.set('incorrectUserId', 'xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx')",
					"pm.collectionVariables.set('BASE_API_URL', 'localhost:3000')"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "incorrectUserId",
			"value": ""
		},
		{
			"key": "BASE_API_URL",
			"value": ""
		},
		{
			"key": "createdUser",
			"value": ""
		}
	]
}