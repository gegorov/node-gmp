{
	"info": {
		"_postman_id": "3570ac6d-bad8-4c83-8afd-51ff33defef4",
		"name": "task2 collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "pipulate api with users",
			"item": [
				{
					"name": "populate api with users",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const users = [",
									"    {",
									"        login: 'x-login',",
									"        password: 'x1password',",
									"        age: 99,",
									"    },",
									"    {",
									"        login: 'm-login',",
									"        password: 'm2password',",
									"        age: 23,",
									"    },",
									"    {",
									"        login: 't-login',",
									"        password: 't22password',",
									"        age: 129,",
									"    },",
									"    {",
									"        login: 'e-login',",
									"        password: 'e23password',",
									"        age: 32,",
									"    },",
									"    {",
									"        login: 'd-login',",
									"        password: 'd23password',",
									"        age: 29,",
									"    },",
									"    {",
									"        login: 'h-login',",
									"        password: 'h34password',",
									"        age: 19,",
									"    },",
									"    {",
									"        login: 'k-login',",
									"        password: 'k45password',",
									"        age: 41,",
									"    },",
									"];",
									"",
									"const postRequestWithoutBody = {",
									"  url: `${pm.collectionVariables.get('BASE_API_URL')}/user`,",
									"  method: 'POST',",
									"  header: {",
									"    'Content-Type': 'application/json',",
									"  },",
									"};",
									"",
									"users.forEach(u => {",
									"    pm.sendRequest(",
									"        {",
									"            ...postRequestWithoutBody,",
									"            body: {",
									"                mode: 'raw',",
									"                raw: JSON.stringify(u)",
									"            }",
									"        },",
									"        (err, res) => {",
									"            console.log(err ? err : res.json());",
									"        },",
									"",
									"    )",
									"})",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_API_URL}}",
							"host": [
								"{{BASE_API_URL}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "get /user",
			"item": [
				{
					"name": "get user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const postRequest = {",
									"  url: `${pm.collectionVariables.get('BASE_API_URL')}/user`,",
									"  method: 'POST',",
									"  header: {",
									"    'Content-Type': 'application/json',",
									"  },",
									"  body: {",
									"    mode: 'raw',",
									"    raw: JSON.stringify({",
									"        login: 'postman login',",
									"        password: 'postman23password',",
									"        age: '42'",
									"    })",
									"  }",
									"};",
									"",
									"pm.sendRequest(postRequest, (err, response) => {",
									"    if (err) {",
									"        console.log(err)",
									"    }",
									"",
									"    const data = response.json();",
									"    console.log('response', data);",
									"",
									"    pm.collectionVariables.set('createdUser', data.id)",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status is 200 on corerect user id', () => {",
									"    pm.response.to.have.status(200)",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_API_URL}}/user/{{createdUser}}",
							"host": [
								"{{BASE_API_URL}}"
							],
							"path": [
								"user",
								"{{createdUser}}"
							],
							"query": [
								{
									"key": "id",
									"value": "72bbfeec-6c4a-4e94-a879-6088ed312a94",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get with short id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status is 400 on short user id', () => {",
									"    pm.response.to.have.status(400)",
									"})",
									"pm.test('Message should contain details', () => {",
									"    pm.expect(pm.response.text()).equals('Error validating request params. \"id\" length must be 36 characters long.')",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_API_URL}}/user/1231",
							"host": [
								"{{BASE_API_URL}}"
							],
							"path": [
								"user",
								"1231"
							]
						}
					},
					"response": []
				},
				{
					"name": "get incorrect id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('wrong id of correct lenght should return 404', () => {",
									"    pm.response.to.have.status(404)",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_API_URL}}/user/{{incorrectUserId}}",
							"host": [
								"{{BASE_API_URL}}"
							],
							"path": [
								"user",
								"{{incorrectUserId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get user raw",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_API_URL}}/user/d8b8c9e8-0125-46f3-81d1-73c6c013c8dd",
							"host": [
								"{{BASE_API_URL}}"
							],
							"path": [
								"user",
								"d8b8c9e8-0125-46f3-81d1-73c6c013c8dd"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "root hello",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BASE_API_URL}}",
					"host": [
						"{{BASE_API_URL}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "post user",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"login\": \"alpha\",\n    \"password\": \"test123\",\n    \"age\": 32\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_API_URL}}/user",
					"host": [
						"{{BASE_API_URL}}"
					],
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete user",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{BASE_API_URL}}/user/{{createdUser}}",
					"host": [
						"{{BASE_API_URL}}"
					],
					"path": [
						"user",
						"{{createdUser}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "edit user",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"password\": \"updated45password\",\n    \"login\": \"ololo\",\n    \"age\": \"42\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_API_URL}}/user/{{createdUser}}",
					"host": [
						"{{BASE_API_URL}}"
					],
					"path": [
						"user",
						"{{createdUser}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "/users auto",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BASE_API_URL}}/users?q=l&limit=100",
					"host": [
						"{{BASE_API_URL}}"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "q",
							"value": "l"
						},
						{
							"key": "limit",
							"value": "100"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.collectionVariables.set('incorrectUserId', 'xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx')",
					"pm.collectionVariables.set('BASE_API_URL', 'localhost:3000')"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "incorrectUserId",
			"value": ""
		},
		{
			"key": "BASE_API_URL",
			"value": ""
		},
		{
			"key": "createdUser",
			"value": ""
		}
	]
}